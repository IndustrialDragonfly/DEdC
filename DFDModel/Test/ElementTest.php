<?php

require_once '../Element.php';
require_once '../Process.php';
require_once '../DataFlowDiagram.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-03 at 19:41:07.
 */
class ElementTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Element
     */
    protected $object;

    /**
     *
     * @var DatabaseStorage
     */
    protected $storage;

    /**
     *
     * @var Diagram
     */
    protected $testDiagram;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        if ($this->storage == null)
        {
            $this->storage = new DatabaseStorage();
        }

        $this->testDiagram = new DataFlowDiagram($this->storage);
        $this->testDiagram->save();
        $this->object = new Process($this->storage, $this->testDiagram->getId());
        $this->testDiagram->addNode($this->object);
        $this->object->save();
        $this->testDiagram->update();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        $this->testDiagram->delete();
    }

    /**
     * @covers Element::setX
     * @covers Element::getX
     */
    public function testSetXGetX_smoke()
    {
        $testval = 57;
        $this->object->setX($testval);
        $this->assertEquals($testval, $this->object->getX());
    }

    /**
     * @covers Element::setX
     * @covers Element::getX
     */
    public function testSetXGetX_empty()
    {
        $testval = 0;
        //$this->object->setX($testval);
        $this->assertEquals($testval, $this->object->getX());
    }

    /**
     * @covers Element::setY
     * @covers Element::getY
     */
    public function testSetYGetY_smoke()
    {
        $testval = 57;
        $this->object->setY($testval);
        $this->assertEquals($testval, $this->object->getY());
    }

    /**
     * @covers Element::setY
     * @covers Element::getY
     */
    public function testSetYGetY_empty()
    {
        $testval = 0;
        //$this->object->setY($testval);
        $this->assertEquals($testval, $this->object->getY());
    }

    /**
     * @covers Element::setLocation
     * @covers Element::getLocation
     */
    public function testSetLocationGetLocation_smoke()
    {
        $testX_Y = array(2345, 12345);
        $this->object->setLocation($testX_Y[0], $testX_Y[1]);
        $this->assertEquals($testX_Y, $this->object->getLocation());
    }

    /**
     * @covers Element::setLocation
     * @covers Element::getLocation
     */
    public function testSetLocationGetLocation_empty()
    {
        $testX_Y = array(0, 0);
        //$this->object->setLocation($testX_Y[0], $testX_Y[1]);
        $this->assertEquals($testX_Y, $this->object->getLocation());
    }
    
    /**
     * @covers Element::getParent
     */
    public function testGetParent_smoke()
    {
        $this->assertEquals($this->object->getParent(), $this->testDiagram->getId());
    }
    
    //TODO - add tests for setParent, and AssociativeArray

}