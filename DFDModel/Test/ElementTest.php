<?php
require_once '../Element.php';
/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2013-11-03 at 19:41:07.
 */
class ElementTest extends PHPUnit_Framework_TestCase
{
   /**
    * @var Element
    */
   protected $object;

   /**
    * Sets up the fixture, for example, opens a network connection.
    * This method is called before a test is executed.
    */
   protected function setUp()
   {
      $this->object = new Element;
   }

   /**
    * Tears down the fixture, for example, closes a network connection.
    * This method is called after a test is executed.
    */
   protected function tearDown()
   {
      
   }

   /**
    * @covers Element::setX
    * @covers Element::getX
    */
   public function test_SetX_GetX_smoke()
   {
      $testval = 57;
      $this->object->setX($testval);
      $this->assertEquals($testval, $this->object->getX());
   }
   
   /**
    * @covers Element::setX
    * @covers Element::getX
    */
   public function test_SetX_GetX_empty()
   {
      $testval = 0;
      //$this->object->setX($testval);
      $this->assertEquals($testval, $this->object->getX());
   }

   /**
    * @covers Element::setY
    * @covers Element::getY
    */
   public function test_SetY_GetY_smoke()
   {
      $testval = 57;
      $this->object->setY($testval);
      $this->assertEquals($testval, $this->object->getY());
   }

   /**
    * @covers Element::setY
    * @covers Element::getY
    */
   public function test_SetY_GetY_empty()
   {
      $testval = 0;
      //$this->object->setY($testval);
      $this->assertEquals($testval, $this->object->getY());
   }

   /**
    * @covers Element::setLocation
    * @covers Element::getLocation
    */
   public function test_SetLocation_GetLocation_smoke()
   {
      $testX_Y = array(2345, 12345);
      $this->object->setLocation($testX_Y[0], $testX_Y[1]);
      $this->assertEquals($testX_Y, $this->object->getLocation());
   }

   /**
    * @covers Element::setLocation
    * @covers Element::getLocation
    */
   public function test_SetLocation_GetLocation_empty()
   {
      $testX_Y = array(0, 0);
      //$this->object->setLocation($testX_Y[0], $testX_Y[1]);
      $this->assertEquals($testX_Y, $this->object->getLocation());
   }

}
