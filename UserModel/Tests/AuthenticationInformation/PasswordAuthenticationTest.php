<?php
require_once "AuthenticationInformation/PasswordAuthentication.php";

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-03-20 at 22:15:02.
 * // TODO: Expand tests with a data provider to try more inputs
 */
class PasswordAuthenticationTest extends PHPUnit_Framework_TestCase
{

    /**
     * @var PasswordAuthentication
     */
    protected $authenticate;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        // Sets up a PasswordAuthentication object with InD/Geoff for user/org
        $this->authenticate = new PasswordAuthentication("InD/Geoff", "NotSuperSecret");
    }


    /**

     * @covers PasswordAuthentication::getAuthenticationMethod
     */
    public function testGetAuthenticationMethod()
    {
        // Ensure that the authentication method returned is "PasswordAuthentication"
        $this->assertEquals("PasswordAuthentication", $this->authenticate->getAuthenticationMethod());
    }
    
    /**
     * @covers PasswordAuthentication::getUserName
     */
    public function testGetUserName()
    {
        // Ensure that the username retrieved is equal to "Geoff"
        $this->assertEquals("Geoff", $this->authenticate->getUserName());
    }
    
    /**
     * @covers PasswordAuthentication::getOrganization
     */
    public function testGetOrgName()
    {
        // Ensure that the origanization retrieved is equal to "InD"
        $this->assertEquals("InD", $this->authenticate->getOrganization());
    }
    
    /**
     * @covers PasswordAuthentication::getCredentials
     */
    public function testGetCredentials()
    {
        // Ensure that the credentials match the stored password "NotSuperSecret"
        $this->assertEquals("NotSuperSecret", $this->authenticate->getCredentials());
    }

}
